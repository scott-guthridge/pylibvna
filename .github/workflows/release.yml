name: Make Release
on:
  push:
    tags: [ "v[0-9]*" ]

jobs:
  build:
    name: Build wheel for ${{ matrix.python[0] }}-${{ matrix.buildplat[1] }} ${{ matrix.buildplat[2] }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      matrix:
        buildplat:
        - [ubuntu-22.04, manylinux, x86_64]
        # - [ubuntu-22.04, musllinux, x86_64]
        # - [macos-11, macosx, x86_64]
        # - [windows-2019, win, AMD64]
        python:
        - ["cp39",  "3.9"]
        # - ["cp310", "3.10"]
        # - ["cp311", "3.11"]
        # - ["cp312", "3.12"]
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install cibuildwheel twine
    - name: Build Wheels
      env:
        CIBW_BUILD: ${{ matrix.python[0] }}-${{ matrix.buildplat[1] }}*
        CIBW_ARCHS: ${{ matrix.buildplat[2] }}
        CIBW_ENVIRONMENT_PASS_LINUX: RUNNER_OS
        CIBW_PRERELEASE_PYTHONS: True
        CIBW_BEFORE_BUILD_LINUX: |
          echo "WHOAMI=`whoami`"
          echo "UNAME=`uname -a`"
          set -e
          yum install -y autoconf automake gcc git libtool libyaml-devel make man m4
          git clone https://github.com/scott-guthridge/libvna.git c-libvna
          cd c-libvna
          ./bootstrap
          ./configure
          make -j12 install
          cd ..
      run: python -m cibuildwheel --output-dir wheelhouse
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.python[0] }}-${{ matrix.buildplat[1] }}
        path: ./wheelhouse/*.whl

    # - name: Publish to PyPI
    #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    #   run: |
    #     python -m twine upload wheelhouse/*
    #   env:
    #     TWINE_USERNAME: __token__
    #     TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    #    tag_name: ${{ github.ref }}
    #    release_name: Release ${{ github.ref }}
    #    draft: false
    #    prerelease: false
